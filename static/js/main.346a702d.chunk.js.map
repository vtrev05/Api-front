{"version":3,"sources":["context/WrapperLang.jsx","theme/UseDarkMode.jsx","theme/themes.js","components/ui/Toggle.jsx","theme/globalStyles.js","components/ui/Header.jsx","components/ui/DivFlex.jsx","components/ui/CardExampleInfo.jsx","components/ui/CardInfo.jsx","utils/const.js","components/CardsExample.jsx","components/ui/BannerHome.jsx","pages/Home.jsx","components/ui/MethodsInfo.jsx","components/ui/SchemaInfo.jsx","components/ui/Request.jsx","components/ui/Response.jsx","components/ui/DocumentationLeftMenu.jsx","pages/Documentation.jsx","components/ui/FormContact.jsx","pages/Contact.jsx","components/ui/FormContributionCircuit.jsx","components/ui/FormContributionDriver.jsx","components/ui/FormContributionTeam.jsx","components/ui/FormContribution.jsx","pages/Contribution.jsx","components/ui/Question.jsx","pages/About.jsx","components/ui/Navigation.jsx","components/ui/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["lang","UseDarkMode","useState","theme","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","lightTheme","body","text","toggleBorder","background","colors","dark","smokewhite","grey","red","darkTheme","Button","styled","button","Toggle","toggleTheme","onClick","icon","faMoon","faSun","GlobalStyles","createGlobalStyle","Context","React","createContext","local","navigator","language","English","Spanish","Wrapper","props","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","e","newLocale","target","children","HeaderDiv","div","ContainerLogo","ContainerUtils","Select","select","Header","context","useContext","themeToggler","themeMode","backgroundColor","onChange","StyleDiv","direction","DivFlex","CardStyled","DivImg","Div","ImgStyled","img","TextStyled","p","CardExampleInfo","infoExample","src","image","logo","alt","name","href","link","birthDate","id","defaultMessage","debut","nationality","active","creation","teamChampionships","length","fastLap","InfoDocStyled","TitleStyled","h2","AncorStyled","a","ArrowIcon","i","CardInfo","info","title","total","card","linkDoc","faArrowRight","URL_BASE","infoDrivers","infoTeams","infoCircuits","CardsExample","setWidth","updateWidth","width","document","clientWidth","addEventListener","removeEventListener","ITEM_URL_DRIVER","ITEM_URL_TEAM","ITEM_URL_CIRCUIT","error","setError","isLoadedDriver","setIsLoadedDriver","isLoadedTeam","setIsLoadedTeam","isLoadedCircuit","setIsLoadedCircuit","axios","then","res","data","drivers","driver","sort","Math","random","slice","_id","teams","team","circuits","circuit","message","desktop","mobile","Home","h1","Container","ContainerMethod","Method","span","MethodInfo","Filters","FilterUl","ul","FilterLi","li","MethodsInfo","schema","method","ContainerSchema","InfoSchema","TableSchema","table","TRow","tr","Thead","th","TData","td","headers","key","type","description","SchemaInfo","opcion","map","CodeDiv","ReqTitle","Request","style","atomOneDark","url","qs","ResTitle","Response","status","Allcircuits","CircuitById","AllDrivers","DriverById","FilterDrivers","AllTeams","TeamById","FilterTeams","CircuitsResponse","DriversResponse","TeamsResponse","OneCircuitResponse","OneDriverResponse","OneTeamResponse","PageContainer","MenuContainer","ContentContainer","MenuUl","MenuLi","big","BodyH1","h3","MenuA","BodyP","DivBodyH1","ReqResContain","DivBodyComponents","DocumentationLeftMenu","Documentation","ContactContainer","ContactTitle","FormContain","form","TextLabel","label","validations","FastLapSize","InputContain","input","TextContain","textarea","ButtonForm","ErrorText","FormContact","messageSent","setMessageSent","formik","useFormik","initialValues","email","validate","values","errors","onSubmit","console","log","post","BASEURL","setTimeout","location","handleSubmit","placeholder","handleChange","rows","cols","touched","htmlFor","Contact","FormContainer","state","Label","FormContributionH1","FormContributionCircuit","objectExample","formikCircuits","corners","time","year","capacity","flat","userName","userEmail","response","FastLap","onBlur","handleBlur","FormContributionDriver","option","objectModel","height","weight","teamHistory","championship","victories","podium","officialSite","FormContributionTeam","formikTeams","website","chasis","engine","driversChampionships","FormContributionContainer","FormContributionSelect","FormContribution","setOption","options","Contribution","QuestionContainer","QuestionH1","color","QuestionH2","QuestionContent","borderBottom","QuestionA","Question","About","Nav","nav","Navul","isOpen","Navli","NavItem","CheckBtn","LogoImage","Navigation","setIsOpen","faBars","to","exact","path","element","FooterContainer","FooterUl","FooterLi","FooterA","copyright","FooterRepo","FooterH4","h4","FooterIcon","repo","Footer","iconColor","faGithub","faCreativeCommons","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","WrapperLang","getElementById"],"mappings":"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","file":"static/js/main.346a702d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport Spanish from \"../lang/es.json\";\nimport English from \"../lang/en.json\";\n\nexport const Context = React.createContext();\n\nconst local = navigator.language;\n\nvar lang;\nif (local === \"en\") {\n  lang = English;\n} else if (local === \"es-ES\") {\n  lang = Spanish;\n}\n\nconst Wrapper = (props) => {\n  const [locale, setLocale] = useState(local);\n  const [messages, setMessages] = useState(lang);\n\n  function selectLanguage(e) {\n    const newLocale = e.target.value;\n    setLocale(newLocale);\n    if (newLocale === \"en\") {\n      setMessages(English);\n    } else if (newLocale === \"es-ES\") {\n      setMessages(Spanish);\n    }\n  }\n\n  return (\n    <Context.Provider value={{ locale, selectLanguage }}>\n      <IntlProvider messages={messages} locale={locale}>\n        {props.children}\n      </IntlProvider>\n    </Context.Provider>\n  );\n};\nexport default Wrapper;","import { useEffect, useState } from 'react';\n\nconst UseDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    \n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode);\n        setTheme(mode);\n    };\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme ? setTheme(localTheme) : setMode('light')\n    }, []);\n    return [theme, themeToggler]\n};\n\nexport default UseDarkMode;","export const lightTheme = {\n    body: '#F5F5F5',\n    text: '#000000',\n    toggleBorder: '#000000',\n    background: '#F5F5F5',\n    colors: {\n        dark: '#000000',\n        smokewhite: '#F5F5F5',\n        grey: '#1f1f27',\n        red: '#e10600'\n    }\n}\nexport const darkTheme = {\n    body: '#000000',\n    text: '#F5F5F5',\n    toggleBorder: '#F5F5F5',\n    background: '#000000',\n    colors: {\n        dark: '#000000',\n        smokewhite: '#F5F5F5',\n        grey: '#1f1f27',\n        red: '#e10600'\n    }\n}","import React from 'react';\nimport { func, string } from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon } from '@fortawesome/free-solid-svg-icons';\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\n\nconst Button = styled.button`\n  background: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  color: ${({ theme }) => theme.text};\n  border-radius: 30px;\n  cursor: pointer;\n  font-size:0.8rem;\n  padding: 0.3rem;\n`;\n\nconst Toggle = ({theme,  toggleTheme }) => {\n    return (\n      <Button onClick={toggleTheme} >\n      {theme === 'dark' && (\n        <FontAwesomeIcon icon={faMoon} />\n      )}\n      {theme === 'light' && (\n        <FontAwesomeIcon icon={faSun} />\n      )}\n      </Button>\n    );\n};\n\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\n\nexport default Toggle;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  /* Reset */\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  /* html,\n  body,\n  div,\n  span,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  pre,\n  a,\n  code,\n  em,\n  img,\n  small,\n  strong,\n  sub,\n  sup,\n  b,\n  u,\n  i,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  main,\n  canvas,\n  embed,\n  footer,\n  header,\n  nav,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    text-size-adjust: none;\n  }\n\n  footer,\n  header,\n  nav,\n  main {\n    display: block;\n  }\n  ol,\n  ul,\n  li {\n    list-style: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  input {\n    -webkit-appearance: none;\n    border-radius: 0;\n  }\n  /* Globals */\n  html {\n    margin: 0;\n    padding: 0;\n    scrollbar-width: thin;\n    scrollbar-color: ${({ theme }) => theme.text};\n    *::-webkit-scrollbar {\n      width: 4px;\n    }\n    *::-webkit-scrollbar-track {\n      background: ${({ theme }) => theme.colors.red};\n    }\n    *::-webkit-scrollbar-thumb {\n      background-color: ${({ theme }) => theme.text};\n      border-radius: 20px;\n    }\n  } \n  body {\n    margin: 0;\n    padding: 0;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.50s linear;\n    a, i {\n      color: ${({ theme }) => theme.text}; \n    }\n  }\n`;\n\nexport default GlobalStyles;","import React, { useContext } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport styled from 'styled-components';\nimport UseDarkMode from '../../theme/UseDarkMode';\nimport { lightTheme, darkTheme } from '../../theme/themes';\nimport Toggle from '../ui/Toggle';\nimport GlobalStyles from '../../theme/globalStyles';\nimport { Context } from '../../context/WrapperLang';\n\nconst HeaderDiv = styled.div`\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\n`;\n\n// background-color:${props => props === 'light' ? 'whitesmoke' : '#1f1f27'};\nconst ContainerLogo = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmargin: 0px auto;\nwidth: 100%;\nz-index: 1;\n`;\n\nconst ContainerUtils = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nalign-content: center;\n`;\n\nconst Select = styled.select`\n    margin-right: 20px;\n    width: 70px;\n    height: 30px;\n    display: block;\n    text-align: center;\n    font-size: 0.6rem;\n    font-weight: bold;\n    border-radius: 5px;\n    background-color: #1f1f27;\n    color: #F5F5F5;\n    border: 2px solid #F5F5F5;\n`;\n\n// const UserImage = styled.img`\n// width: 25px;\n// height: 100%;\n// margin: 20px;\n// cursor: pointer;\n// &:hover {\n//     opacity: 50%;\n// }\n// `;\n\nconst Header = () => {\n    const context = useContext(Context);\n\n    const [theme, themeToggler] = UseDarkMode();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    return (\n        <ThemeProvider theme={themeMode}>\n            <GlobalStyles />\n            <HeaderDiv>\n                <ContainerLogo backgroundColor='light'>\n                    <ContainerUtils>\n                        <Select value={context.locale} onChange={context.selectLanguage}>\n                            <option value=\"es-ES\">Español</option>\n                            <option value=\"en\">English</option>\n                        </Select>\n                        <Toggle theme={theme} toggleTheme={themeToggler} />\n                        {/* <UserImage src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\" alt=\"user\" /> */}\n                    </ContainerUtils>\n                </ContainerLogo>\n            </HeaderDiv>\n        </ThemeProvider>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyleDiv = styled.div`\n    display: flex;\n    flex-direction: ${props => props.direction === 'row' ? 'row' : 'column'};\n    justify-content: center;\n    align-items: center;\n`;\n\nconst DivFlex = ({ children, direction }) => {\n    return (\n        <StyleDiv direction={direction}>\n            {children}\n        </StyleDiv>\n    )\n}\n\nexport default DivFlex;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from \"react-intl\";\n\nconst CardStyled = styled.div`\n    font-size: 1rem;\n    border-style: solid;\n    border-radius: 5px;\n    width: 100%;\n    background-color: #15151e;\n    padding: 20px 10px;\n`;\n\nconst DivImg = styled.div` \n/*     min-width: 350px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    overflow: hidden; */\n`;\n\nconst Div = styled.div`\n\n`;\n\nconst ImgStyled = styled.img`\n    max-width: 350px;\n    max-height: 169px;\n    background-color: #fff;\n    border-radius: 5px;\n`;\n\nconst TextStyled = styled.p`\n    margin: 10px;\n    text-align: center;\n    color: whitesmoke;\n    font-weight: 600;\n    font-size: 1rem;\n    display: block;\n    padding: 13px;\n    border: #e10600 5px double;\n    border-top-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n`;\n\nconst CardExampleInfo = ({ infoExample }) => {\n    return (\n        <CardStyled>\n            <DivImg>\n                <ImgStyled src={infoExample.image ? infoExample.image : infoExample.logo} alt={infoExample.name} href={infoExample.link}></ImgStyled>\n            </DivImg>\n            <Div>\n                {infoExample.birthDate && (\n                    <> \n                        <TextStyled>{infoExample.name}</TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.debut\" defaultMessage=\"Debut\" /> : {infoExample.debut}\n                        </TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.nationality\" defaultMessage=\"Nationality\" /> :  {infoExample.nationality}\n                        </TextStyled>\n                    </>\n                )}\n                {infoExample.active && (\n                    <>\n                        <TextStyled>{infoExample.name}</TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.creation\" defaultMessage=\"Creation\" /> : {infoExample.creation}\n                        </TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.team.championships\" defaultMessage=\"Team Championships\" /> : {infoExample.teamChampionships.length}\n                        </TextStyled>\n                    </>\n                )}\n                {infoExample.fastLap && (\n                    <>\n                        <TextStyled>{infoExample.name}</TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.creation\" defaultMessage=\"Creation\" /> : {infoExample.creation}\n                        </TextStyled>\n                        <TextStyled>\n                            <FormattedMessage id=\"form.nationality\" defaultMessage=\"Nationality\" /> : {infoExample.nationality}\n                        </TextStyled>\n                    </>\n                )}\n            </Div>\n        </CardStyled>\n    )\n};\n\nexport default CardExampleInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CardExampleInfo from './CardExampleInfo';\nimport DivFlex from './DivFlex';\n\nimport { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nconst InfoDocStyled = styled.div`\n    padding: 20px;\n    border: 2px '#e10600' solid;\n`;\n\nconst TitleStyled = styled.h2`\n    color: whitesmoke;\n    border: 2px solid whitesmoke;\n    padding: 5px 0;\n    width: 200px;\n    text-align: center;\n    font-size: 2.1rem;\n    background-color: #15151e;\n    border-radius: 8px;\n`;\n\nconst TextStyled = styled.p`\n    padding: 10px 0px;\n    font-size: 1.6rem;\n    font-weight: 700;\n`;\n\nconst AncorStyled = styled.a`\n    text-decoration: none;\n    padding-top: 20px;\n    cursor: help;\n    font-size: 1.1rem;\n    font-weight: 600;\n`;\n\nconst ArrowIcon = styled.i`\n    padding: 0px 5px;\n    color: #e10600;\n`;\n\nconst CardInfo = ({ info, direction }) => {\n    return (\n        <InfoDocStyled>\n            <DivFlex direction={direction}>\n                <> \n                    <TitleStyled>\n                        <FormattedMessage id={`title.${info.title}`} defaultMessage=\"Total\" />\n                    </TitleStyled>\n                </>\n                <> \n                    <DivFlex direction={\"row\"}>\n                        <TextStyled>\n                            <FormattedMessage id=\"home.total\" />: {info.total}\n                        </TextStyled>\n                    </DivFlex>\n                </>\n                <> \n                    <AncorStyled href={info.link} target='_blank'>\n                        <CardExampleInfo infoExample={info.card}></CardExampleInfo>\n                    </AncorStyled>\n                </>\n                <> \n                    <AncorStyled href={info.linkDoc}>\n                        <FormattedMessage id=\"home.review.docs\" />\n                        <ArrowIcon>\n                            <FontAwesomeIcon icon={faArrowRight} />\n                        </ArrowIcon>\n                    </AncorStyled>\n                </>\n            </DivFlex>\n        </InfoDocStyled>\n    )\n};\n\nexport default CardInfo;\n","export const URL_BASE = 'https://formula1s.herokuapp.com';\r\nexport const URL_BASE_DEV = 'http://localhost:3000';","import React, { useState, useEffect } from \"react\";\nimport DivFlex from './ui/DivFlex';\nimport CardInfo from './ui/CardInfo';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { URL_BASE } from '../utils/const';\n\nconst Div = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0px 0px 30px;\n    overflow: hidden;\n`;\n\nlet direction = \"column\";\n\nlet infoDrivers = {\n    title: 'drivers',\n    total: 0,\n    card: {},\n    link: '',\n    linkDoc: ''\n};\nlet infoTeams = {\n    title: 'teams',\n    total: 0,\n    card: {},\n    link: '',\n    linkDoc: ''\n};\nlet infoCircuits = {\n    title: 'circuits',\n    total: 0,\n    card: {},\n    link: '',\n    linkDoc: ''\n};\n\nconst CardsExample = () => {\n\n    const [width, setWidth] = useState(0);\n\n    useEffect(() => {\n        const updateWidth = () => {\n            const width = document.body.clientWidth;\n            setWidth(width);\n            width > 1000 ? direction = 'row' : direction = 'column';\n        };\n        updateWidth();\n\n        window.addEventListener(\"resize\", updateWidth);\n\n        return () => {\n            window.removeEventListener(\"resize\", updateWidth);\n        };\n    });\n\n    const ITEM_URL_DRIVER = \"/drivers\";\n    const ITEM_URL_TEAM = \"/teams\";\n    const ITEM_URL_CIRCUIT = \"/circuits\";\n\n    const [error, setError] = useState(null);\n    const [isLoadedDriver, setIsLoadedDriver] = useState(false);\n    const [isLoadedTeam, setIsLoadedTeam] = useState(false);\n    const [isLoadedCircuit, setIsLoadedCircuit] = useState(false);\n\n    useEffect(() => {\n        axios(URL_BASE + ITEM_URL_DRIVER).then(\n            (res) => {\n                infoDrivers.total = res.data.data.drivers.length;\n                const driver = res.data.data.drivers.sort(() => Math.random() > 0.5 ? 1 : -1).slice(0, 1);\n                infoDrivers.link = `${URL_BASE}${ITEM_URL_DRIVER}/id/${driver[0]._id}`;\n                infoDrivers.linkDoc = `${URL_BASE}/documentation#drive`;\n                infoDrivers.card = driver[0];\n                setIsLoadedDriver(true);\n            },\n            (error) => {\n                setIsLoadedDriver(true);\n                setError(error);\n            }\n        );\n        axios(URL_BASE + ITEM_URL_TEAM).then(\n            (res) => {\n                infoTeams.total = res.data.data.teams.length;\n                const team = res.data.data.teams.sort(() => Math.random() > 0.5 ? 1 : -1).slice(0, 1);\n                infoTeams.link = `${URL_BASE}${ITEM_URL_TEAM}/id/${team[0]._id}`;\n                infoDrivers.linkDoc = `${URL_BASE}/documentation#team`;\n                infoTeams.card = team[0];\n                setIsLoadedTeam(true);\n            },\n            (error) => {\n                setIsLoadedTeam(true);\n                setError(error);\n            }\n        );\n        axios(URL_BASE + ITEM_URL_CIRCUIT).then(\n            (res) => {\n                infoCircuits.total = res.data.data.circuits.length;\n                const circuit = res.data.data.circuits.sort(() => Math.random() > 0.5 ? 1 : -1).slice(0, 1);\n                infoCircuits.link = `${URL_BASE}${ITEM_URL_CIRCUIT}/id/${circuit[0]._id}`;\n                infoDrivers.linkDoc = `${URL_BASE}/documentation#circuit`;\n                infoCircuits.card = circuit[0];\n                setIsLoadedCircuit(true);\n            },\n            (error) => {\n                setIsLoadedCircuit(true);\n                setError(error);\n            }\n        );\n    }, []);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoadedDriver && !isLoadedTeam && !isLoadedCircuit) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <>\n                <Div>\n                    <DivFlex direction={direction}>\n                        <CardInfo info={infoDrivers}></CardInfo>\n                        <CardInfo info={infoTeams}></CardInfo>\n                        <CardInfo info={infoCircuits}></CardInfo>\n                    </DivFlex>\n                </Div>\n            </>\n        );\n    }\n}\n\nexport default CardsExample;","import React from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from \"react-intl\";\n\nconst desktopStartWidth = 500;\n\n// eslint-disable-next-line no-unused-vars\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\n\nconst ContainerHome = styled.div`\n    display: flex;\n    ${mobile} {\n        height: 150px;\n\t}\n    ${desktop} {\n        height: 300px;\n\t}\n    text-align: center;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst Title = styled.h1`\n    /* margin: 15px; */\n    text-align: center;\n    /* z-index: 1; */\n    font-size: 4rem;\n    color: white;\n`;\n\nconst HomeImage = styled.img`\n    position: absolute;\n    object-fit: cover;\n    object-position: center center;\n    width: 100%;\n    ${mobile} {\n        height: 40%;\n\t}\n    ${desktop} {\n        height: 40%;\n\t}\n    z-index: -1;\n    filter: blur(1px);\n`;\n\nconst BannerHome = () => {\n    return (\n        <ContainerHome>\n            <Title>\n                <FormattedMessage\n                    id=\"banner.home\"\n                    defaultMessage=\"API F1\" />\n            </Title>\n            <HomeImage src=\"https://lapagina.com.sv/wp-content/uploads/2021/10/Hamilton-vs-Verstappen.jpg\" alt=\"f1\" />\n        </ContainerHome>\n    )\n}\n\nexport default BannerHome;\n","import React from \"react\";\nimport CardsExample from '../components/CardsExample';\nimport BannerHome from \"../components/ui/BannerHome\";\n\nconst Home = () => {\n    return (\n        <>\n            <CardsExample></CardsExample>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container=styled.div`\n    width: 80%;\n    \n\n`;\nconst ContainerMethod=styled.div`\n    background-color:#E5E5E5;\n    padding: 20px;\n    border-radius: 5px;\n    font-size: 20px;\n    color: black;\n`;\nconst Method=styled.span`\n    font-size: 20px;\n    color:#1EB40A;\n    font-weight:bold;\n`;\nconst MethodInfo=styled.p`\nfont-size: 20px;\ncolor: black;\n`;\nconst Filters =styled.p`\nfont-size: 20px;\ncolor: black;\n`;\nconst FilterUl=styled.ul`\nfont-size: 20px;\nlist-style:none;\ncolor: black;\n`;\nconst FilterLi=styled.li`\nfont-size: 20px;\nfont-style:italic;\ncolor: black;\n`;\nconst drivers={\n    method:\"GET\",\n    all:\"http://localhost:4000/drivers/\",\n    id:\"http://localhost:4000/drivers/id/618d3d...\",\n    filter:\"http://localhost:4000/drivers/items?debut=2007\"\n   \n}\nconst circuits={\n    method:\"GET\",\n    all:\"http://localhost:4000/circuits/\",\n    id:\"http://localhost:4000/circuits/id/618a9a2...\", \n  \n}\nconst teams={\n    method:\"GET\",\n    all:\"http://localhost:4000/teams/\",\n    id:\"http://localhost:4000/teams/id/618d1c2b...\", \n    filter:\"http://localhost:4000/teams/items?teamChampionships=2003\" \n    \n}\nconst MethodsInfo = (props) => {\n    if(props.schema===\"drivers\"&&props.method===\"all\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{drivers.method}   </Method>{drivers.all}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"drivers\"&&props.method===\"id\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{drivers.method}   </Method>{drivers.id}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"drivers\"&&props.method===\"filter\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n\n                        <MethodInfo><Method>{drivers.method}   </Method>{drivers.filter}</MethodInfo>\n                        <Filters>\n                            You can filter by the following fields:\n                            <FilterUl>\n                                <FilterLi>debut</FilterLi>\n                                <FilterLi>championsship</FilterLi>\n                                <FilterLi>victories</FilterLi>\n                                <FilterLi>podium</FilterLi>\n                                <FilterLi>...</FilterLi>\n                            </FilterUl>\n                        </Filters>\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"teams\"&&props.method===\"all\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{teams.method}   </Method>{teams.all}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"teams\"&&props.method===\"id\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{teams.method}</Method> {teams.id}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"teams\"&&props.method===\"filter\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <MethodInfo><Method>{teams.method}</Method> {teams.filter}</MethodInfo>\n                        <Filters>\n                            You can filter by the following fields:\n                            <FilterUl>\n                                <FilterLi>name</FilterLi>\n                                <FilterLi>nationality</FilterLi>\n                                <FilterLi>location</FilterLi>\n                                <FilterLi>engine</FilterLi>\n                                <FilterLi>...</FilterLi>\n                            </FilterUl>\n                        </Filters>\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"circuits\"&&props.method===\"all\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{circuits.method}</Method> {circuits.all}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }else if(props.schema===\"circuits\"&&props.method===\"id\"){\n        return (\n            <>\n                <Container>\n                    <ContainerMethod>\n                        <Method>{circuits.method}</Method> {circuits.id}\n                    </ContainerMethod>\n                </Container>\n                \n            </>\n        )\n    }\n}\n\nexport default MethodsInfo\n","import React from 'react'\nimport styled from \"styled-components\"\n\nconst Container=styled.div`\n`;\n\nconst ContainerSchema=styled.div`\n    background-color:#E5E5E5;\n    \n    border-radius:7px;\n   \n`;\nconst InfoSchema=styled.p`\n  \n`;\nconst TableSchema=styled.table`\nfont-size: 18px;\ncolor: black;\n\n`;\nconst TRow=styled.tr`\n\n`;\nconst Thead=styled.th`\npadding: 20px;\nfont-weight: bolder;\n`;\nconst TData=styled.td`\npadding: 10px;`;\n//schemas\nconst drivers={\n    headers:[\"Key\",\"Type\",\"Description\"],\n    data:[\n        {key:\"_id\",type:\"Number\",description:\"The id of the driver.\"},\n        {key:\"name\",type:\"String\",description:\"The name of the driver.\"},\n        {key:\"nationality\",type:\"String\",description:\"The nationality of the driver.\"},\n        {key:\"birthDate\",type:\"String\",description:\"The birthDate of the driver.\"},\n        {key:\"height\",type:\"Number\",description:\"The height of the driver in cm .\"},\n        {key:\"weight\",type:\"Number\",description:\"The weight of the driver in Kg.\"},\n        {key:\"team\",type:\"Object\",description:\"The team of the driver.\"},\n        {key:\"teamHistory\",type:\"String\",description:\"The team history of the driver.\"},\n        {key:\"championship\",type:\"String\",description:\"The championship of the driver.\"},\n        {key:\"victories\",type:\"Number\",description:\"The victories of the driver.\"},\n        {key:\"podium\",type:\"Number\",description:\"The podiums of the driver.\"},\n        {key:\"debut\",type:\"String\",description:\"The debut (year) of the driver .\"},\n        {key:\"image\",type:\"String\",description:\"The image of the driver.\"},\n        {key:\"officialSite\",type:\"String\",description:\"The site web of the driver.\"}\n    ]\n}\nconst teams={\n    headers:[\"Key\",\"Type\",\"Description\"],\n    data:[\n        {key:\"_id\",type:\"Number\",description:\"The id of the team.\"},\n        {key:\"name\",type:\"String\",description:\"The name of the team.\"},\n        {key:\"nationality\",type:\"String\",description:\"The nationality of the team.\"},\n        {key:\"logo\",type:\"String\",description:\"The logo of the team.\"},\n        {key:\"creation\",type:\"String\",description:\"the year the team was created. \"},\n        {key:\"debut\",type:\"String\",description:\"the year and country where the team debuted.\"},\n        {key:\"location\",type:\"String\",description:\"The location of the team.\"},\n        {key:\"website\",type:\"String\",description:\"The web site of the team.\"},\n        {key:\"drivers\",type:\"Object\",description:\"The team drivers.\"},\n        {key:\"active\",type:\"Boolean\",description:\"state of team.\"},\n        {key:\"chasis\",type:\"String\",description:\"equipment chassis type.\"},\n        {key:\"engine\",type:\"String\",description:\".\"},\n        {key:\"Championships\",type:\"String[]\",description:\"The image of the driver.\"},\n        {key:\"officialSite\",type:\"String[]\",description:\"The site web of the driver.\"}\n    ]\n}\nconst circuits={\n    headers:[\"Key\",\"Type\",\"Description\"],\n    data:[\n        {key:\"_id\",type:\"Number\",description:\"The id of the circuit.\"},\n        {key:\"name\",type:\"String\",description:\"The name of the circuit.\"},\n        {key:\"nationality\",type:\"String\",description:\"The nationality of the circuit.\"},\n        {key:\"length\",type:\"String\",description:\"The distance of the circuit in km.\"},\n        {key:\"corners\",type:\"Number\",description:\"The curves of the circuit.\"},\n        {key:\"fastLap\",type:\"Object\",description:\"Shows the driver, the time, the team and the year of the fast lap of the circuit.\"},\n        {key:\"creation\",type:\"String\",description:\"the year the circuit was created.\"},\n        {key:\"capacity\",type:\"Number\",description:\"the capacity of spectators in the circuit.\"},\n        {key:\"image\",type:\"String\",description:\"The image of the circuit.\"},\n        {key:\"flat\",type:\"String\",description:\"The flat of the circuit.\"},\n    ]\n}\nconst SchemaInfo = (props) => {\n    if(props.opcion===\"drivers\"){\n        return (\n            <>\n                <Container>\n                    <ContainerSchema>\n                        <InfoSchema>\n                            <TableSchema>\n                                <TRow>\n                                    {drivers.headers.map(e=><Thead>{e}</Thead>)}\n                                </TRow>\n                                {drivers.data.map(e=><TRow><TData>{e.key}</TData><TData>{e.type}</TData><TData>{e.description}</TData></TRow>)}\n                            </TableSchema>\n                        </InfoSchema>\n                    </ContainerSchema>\n                </Container>\n            </>\n        )\n    }else if(props.opcion===\"teams\"){\n        return (\n            <>\n                <Container>\n                    <ContainerSchema>\n                        <InfoSchema>\n                            <TableSchema>\n                                <TRow>\n                                    {teams.headers.map(e=><Thead>{e}</Thead>)}\n                                </TRow>\n                                {teams.data.map(e=><TRow><TData>{e.key}</TData><TData>{e.type}</TData><TData>{e.description}</TData></TRow>)}\n                            </TableSchema>\n                        </InfoSchema>\n                    </ContainerSchema>\n                </Container>\n            </>\n        )\n    }else{\n        return (\n            <>\n                <Container>\n                    <ContainerSchema>\n                        <InfoSchema>\n                            <TableSchema>\n                                <TRow>\n                                    {circuits.headers.map(e=><Thead>{e}</Thead>)}\n                                </TRow>\n                                {circuits.data.map(e=><TRow><TData>{e.key}</TData><TData>{e.type}</TData><TData>{e.description}</TData></TRow>)}\n                            </TableSchema>\n                        </InfoSchema>\n                    </ContainerSchema>\n                </Container>\n            </>\n        )\n    }\n} \nexport default SchemaInfo;\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport DivFlex from './DivFlex';\nimport styled from 'styled-components';\n\nconst desktopStartWidth = 576;\n\n// eslint-disable-next-line no-unused-vars\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\n\nconst CodeDiv = styled.div`\nmargin: 15px;\ntext-align: justify;\nwidth: 550px;\nfont-size: 20px;\n${mobile} {\n    width: 350px;\n}\n`\n\nconst ReqTitle = styled.p`\nfont-size: 20px;\nwidth: 100%;\nmargin: 0 auto;\n`\n\nconst Request = ({props}) => {\n    return (\n        <DivFlex direction={\"column\"}>\n        <ReqTitle>Request</ReqTitle>\n        <CodeDiv>\n            <SyntaxHighlighter language=\"javascript\" style={atomOneDark}>\n                {`  \n    var request = require(\"request\");\n            \n    var options = {\n        method: \"${props.method}\",\n        url: \"${props.url}\",\n        ${props.qs ? `qs: ${props.qs}` : ''}\n        };\n                    \n        request(options, function (error, response, body) {    \n            if (error) throw new Error(error);\n            console.log(body);\n    });\n    `}\n\n            </SyntaxHighlighter>\n        </CodeDiv>\n        </DivFlex>\n    )\n}\n\nexport default Request\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport DivFlex from './DivFlex';\nimport styled from 'styled-components';\n\nconst CodeDiv = styled.div`\nmargin: 15px;\ntext-align: justify;\nwidth: 200px;\nfont-size: 20px;\n`\n\nconst ResTitle = styled.p`\nfont-size: 20px;\n`\n\nconst Response = ({props}) => {\n    return (\n        <DivFlex direction={\"column\"}>\n             <ResTitle>Response</ResTitle>\n             <CodeDiv>\n            <SyntaxHighlighter language=\"javascript\" style={atomOneDark}>\n                {`\n    {\n     \"status\": ${props.status},\n     \"message\": ${props.message},\n     \"data\": {\n        ${props.data}    \n     }}\n     `\n                }\n            </SyntaxHighlighter>\n            </CodeDiv>\n        </DivFlex>\n    )\n}\n\nexport default Response\n","import React from 'react'\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport styled from 'styled-components';\r\nimport MethodsInfo from './MethodsInfo';\r\nimport SchemaInfo from './SchemaInfo';\r\nimport Request from './Request';\r\nimport Response from './Response';\r\n\r\nconst desktopStartWidth = 1000;\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\r\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\r\n\r\nconst Allcircuits = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/circuits\"\r\n}\r\n\r\nconst CircuitById = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/circuits/id/618a9a28dffaf9002fc1ca24\"\r\n}\r\n\r\nconst AllDrivers = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/drivers\"\r\n}\r\n\r\nconst DriverById = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/drivers/id/618d3d32948f3b19da8696ab\"\r\n}\r\n\r\nconst FilterDrivers = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/drivers/items\",\r\n    qs: \"{debut: 2007}\"\r\n}\r\n\r\nconst AllTeams = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/teams\"\r\n}\r\n\r\nconst TeamById = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/teams/id/618d1c2bd38f2b5a312e0f28\"\r\n}\r\n\r\nconst FilterTeams = {\r\n    method: \"GET\",\r\n    url: \"http://localhost:3000/teams/items\",\r\n    qs: \"{nationality: 'Italian'}\"\r\n}\r\n\r\nconst CircuitsResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'circuits': [...]\"\r\n}\r\nconst DriversResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'circuits': [...]\"\r\n}\r\nconst TeamsResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'circuits': [...]\"\r\n}\r\nconst OneCircuitResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'circuit': {...}\"\r\n}\r\n\r\nconst OneDriverResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'driver': {...}\"\r\n}\r\n\r\nconst OneTeamResponse = {\r\n    status: 200,\r\n    message: \"OK\",\r\n    data: \"'team': {...}\"\r\n}\r\n/* background-color:${props => props.backgroundColor === 'light' ? 'whitesmoke' : '#1f1f27'}; */\r\nconst PageContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    border-bottom: 1px solid #ccd0d6;\r\n    \r\n    ${mobile} {\r\n        overflow-x: hidden;\r\n    }\r\n    `\r\n/* background-color:${props => props.backgroundColor === 'light' ? 'whitesmoke' : '#1f1f27'}; */\r\nconst MenuContainer = styled.div`\r\npadding: 20px;\r\n    width: 20vh;\r\n    height: 150vh;\r\n    position: -webkit-sticky;\r\n    position: sticky;\r\n    top: 20px;\r\n    ${mobile} {\r\n        display: none;\r\n    }\r\n;`\r\n\r\nconst ContentContainer = styled.div`\r\n    max-width: 60vw;\r\n    margin: 0 auto;\r\n    float: inline-start;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:space-between;\r\n    ${mobile} {\r\n        max-width: 80vw;\r\n        width:90%;\r\n        padding-inline:0 ;\r\n    }\r\n    `\r\n\r\nconst MenuUl = styled.ul`\r\n    width: 300px;\r\n    padding-left: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 30px;\r\n    border-right: 1px solid #ccd0d6;\r\n`;\r\n\r\nconst MenuLi = styled.li`\r\n    margin: 15px;\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    list-style-type: none;\r\n    display: flex;\r\n    text-align: left;\r\n    flex-direction: column;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.title === 'true' ? 'bold' : '400'};\r\n    font-size: ${props => props.big === 'true' ? '1.6rem' : '1.1rem'};\r\n`;\r\n\r\nconst BodyH1 = styled.h3`\r\n    display: block;\r\n    text-align: center;\r\n    font-weight: bolder;\r\n    font-size: 25px ;\r\n    padding-bottom: 30px;\r\n    margin: 0;\r\n    color: #e10600; \r\n`;\r\nconst MenuA = styled.a`\r\n    font-weight: 600;\r\n    font-weight: ${props => props.title === 'true' ? 'bold' : '400'};\r\n    font-size: ${props => props.big === 'true' ? '1.6rem' : '1.1rem'};\r\n    &:hover {\r\n        color: #e10600;\r\n    }\r\n`;\r\nconst BodyP = styled.p`\r\n    font-size: 20px;\r\n    line-height: 1.75;\r\n    text-align: center;\r\n    width: 100%;\r\n    `\r\n\r\nconst DivBodyH1 = styled.div`\r\n    justify-content:space-between;\r\n    padding: 20px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst ReqResContain = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    ${mobile} {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst DivBodyComponents = styled.div`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    text-align: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    ${mobile} {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\n\r\nconst DocumentationLeftMenu = () => {\r\n    return (\r\n        <PageContainer backgroundColor=\"light\">\r\n\r\n            <MenuContainer backgroundColor=\"light\">\r\n                <MenuUl>\r\n                    <MenuLi big=\"\">\r\n                        <MenuA href=\"intro\" style={{ \"text-decoration\": \"none\" }} title=\"true\" big=\"true\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.intro\"\r\n                                defaultMessage=\"Introduction\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    {/* <MenuLi>\r\n                        <MenuA href=\"#auth\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.auth\"\r\n                                defaultMessage=\"Authentication\" />\r\n                        </MenuA>\r\n                    </MenuLi> */}\r\n                    <MenuLi>\r\n                        <MenuA href=\"#rest\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.rest\"\r\n                                defaultMessage=\"Rest API\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                   {/*  <MenuLi>\r\n                        <MenuA href=\"#info\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.info\"\r\n                                defaultMessage=\"Info\" />\r\n                        </MenuA>\r\n                    </MenuLi> */}\r\n                    <MenuLi>\r\n                        <MenuA href=\"#driver\" style={{ \"text-decoration\": \"none\" }} title=\"true\" big=\"true\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.drivers\"\r\n                                defaultMessage=\"Driver\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#driverSchema\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.drivers.schema\"\r\n                                defaultMessage=\"Drivers schema\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getAllDrivers\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.drivers.getAll\"\r\n                                defaultMessage=\"Get all drivers\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getOneDriver\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.drivers.getSingle\"\r\n                                defaultMessage=\"Get a single driver\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#filterDriver\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.drivers.filter\"\r\n                                defaultMessage=\"Filter drivers\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n\r\n                    <MenuLi>\r\n                        <MenuA href=\"#team\" style={{ \"text-decoration\": \"none\" }} title=\"true\" big=\"true\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.teams\"\r\n                                defaultMessage=\"Team\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#teamSchema\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.teams.schema\"\r\n                                defaultMessage=\"Teams schema\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getAllTeams\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.teams.getAll\"\r\n                                defaultMessage=\"Get all Teams\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getOneTeam\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.teams.getSingle\"\r\n                                defaultMessage=\"Get a single team\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#filterTeams\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.teams.filter\"\r\n                                defaultMessage=\"Filter teams\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n\r\n                    <MenuLi>\r\n                        <MenuA href=\"#circuits\" style={{ \"text-decoration\": \"none\" }} title=\"true\" big=\"true\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.circuits\"\r\n                                defaultMessage=\"Circuits\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#circuitSchema\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.circuits.schema\"\r\n                                defaultMessage=\"Circuits schema\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getAllCircuits\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.circuits.getAll\"\r\n                                defaultMessage=\"Get all Circuits\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                    <MenuLi>\r\n                        <MenuA href=\"#getOneCircuit\" style={{ \"text-decoration\": \"none\" }} title=\"false\" big=\"false\">\r\n                            <FormattedMessage\r\n                                id=\"docs.leftSideBar.circuits.getSingle\"\r\n                                defaultMessage=\"Get a single Circuit\" />\r\n                        </MenuA>\r\n                    </MenuLi>\r\n                </MenuUl>\r\n            </MenuContainer>\r\n            <ContentContainer>\r\n                <DivBodyH1 name=\"intro\" id=\"intro\">\r\n                <BodyH1>\r\n                    <FormattedMessage\r\n                        id=\"docs.leftSideBar.intro\"\r\n                        defaultMessage=\"Introduction\" />\r\n                    </BodyH1>\r\n                    <BodyP>\r\n                    <FormattedMessage\r\n                        id=\"docs.intro\"\r\n                        defaultMessage=\"This documentation will help you get familiar with the resources of the Formula 1's API and show you how to make different queries, so that you can get the most out of it.\" />\r\n                    </BodyP>\r\n                </DivBodyH1>\r\n\r\n                {/* <DivBodyH1 id=\"auth\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.auth\"\r\n                            defaultMessage=\"Authentication\" />\r\n                    </BodyH1>\r\n                </DivBodyH1> */}\r\n\r\n                <DivBodyH1 id=\"rest\">\r\n                    <BodyH1 id=\"rest\">\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.rest\"\r\n                            defaultMessage=\"Rest API\" />\r\n                    </BodyH1>\r\n                        <BodyP>\r\n                        <FormattedMessage\r\n                            id=\"docs.rest.base\"\r\n                            defaultMessage=\"Base url: http://localhost:3000/\" />\r\n                        </BodyP>\r\n                        <BodyP>\r\n                        <FormattedMessage\r\n                            id=\"docs.rest.text\"\r\n                            defaultMessage=\"The base url contains information about all available API's resources. All requests are GET requests and go over https. All responses will return data in json.\" />\r\n                        </BodyP>\r\n                        <BodyP>\r\n                        <FormattedMessage\r\n                            id=\"docs.rest.text2\"\r\n                            defaultMessage=\"There are currently three available resources:\" />\r\n                        </BodyP>\r\n                </DivBodyH1>\r\n\r\n                {/* <DivBodyH1 id=\"info\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.info\"\r\n                            defaultMessage=\"Info\" />\r\n                    </BodyH1>\r\n                </DivBodyH1> */}\r\n\r\n                <DivBodyH1 id=\"driver\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.drivers\"\r\n                            defaultMessage=\"Driver\" />\r\n                    </BodyH1>\r\n                </DivBodyH1>\r\n                <DivBodyH1 id=\"driverSchema\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.drivers.schema\"\r\n                            defaultMessage=\"Drivers schema\" />\r\n                            </BodyH1>\r\n                        <SchemaInfo opcion=\"drivers\" />\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getAllDrivers\">\r\n                    <BodyH1 >\r\n                    <FormattedMessage\r\n                            id=\"docs.leftSideBar.drivers.getAll\"\r\n                            defaultMessage=\"Get all drivers\" />\r\n                    </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"drivers\" method=\"all\" />\r\n                            <ReqResContain>\r\n                                <Request props={AllDrivers}></Request>\r\n                                <Response props={DriversResponse}></Response>\r\n                            </ReqResContain>\r\n                            </DivBodyComponents>\r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getOneDriver\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.drivers.getSingle\"\r\n                            defaultMessage=\"Get a single driver\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"drivers\" method=\"id\" />\r\n                            <ReqResContain>\r\n                                <Request props={DriverById}></Request>\r\n                                <Response props={OneDriverResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"filterDriver\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.drivers.filter\"\r\n                            defaultMessage=\"Filter drivers\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"drivers\" method=\"filter\" />\r\n                            <ReqResContain>\r\n                                <Request props={FilterDrivers}></Request>\r\n                                <Response props={DriversResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"team\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.teams\"\r\n                            defaultMessage=\"Team\" />\r\n                    </BodyH1>\r\n                </DivBodyH1>\r\n                <DivBodyH1 id=\"teamSchema\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.teams.schema\"\r\n                            defaultMessage=\"Teams schema\" />\r\n                            </BodyH1>\r\n                        <SchemaInfo opcion=\"teams\" />\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getAllTeams\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.teams.getAll\"\r\n                            defaultMessage=\"Get all teams\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"teams\" method=\"all\" />\r\n                            <ReqResContain>\r\n                                <Request props={AllTeams}></Request>\r\n                                <Response props={TeamsResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getOneTeam\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.teams.getSingle\"\r\n                            defaultMessage=\"Get a single team\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"teams\" method=\"id\" />\r\n                            <ReqResContain>\r\n                                <Request props={TeamById}></Request>\r\n                                <Response props={OneTeamResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"filterTeams\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.teams.filter\"\r\n                            defaultMessage=\"Filter teams\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"teams\" method=\"filter\" />\r\n                            <ReqResContain>\r\n                                <Request props={FilterTeams}></Request>\r\n                                <Response props={TeamsResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"circuits\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.circuits\"\r\n                            defaultMessage=\"Circuit\" />\r\n                    </BodyH1>\r\n                    <BodyH1 id=\"circuitSchema\">\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.circuits.schema\"\r\n                            defaultMessage=\"Circuits schema\" />\r\n                            </BodyH1>\r\n                        <SchemaInfo />\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getAllCircuits\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.circuits.getAll\"\r\n                            defaultMessage=\"Get all circuits\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"circuits\" method=\"all\" />\r\n                            <ReqResContain>\r\n                                <Request props={Allcircuits}></Request>\r\n                                <Response props={CircuitsResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n                <DivBodyH1 id=\"getOneCircuit\">\r\n                    <BodyH1>\r\n                        <FormattedMessage\r\n                            id=\"docs.leftSideBar.circuits.getSingle\"\r\n                            defaultMessage=\"Get a single circuit\" />\r\n                            </BodyH1>\r\n                        <DivBodyComponents>\r\n                            <MethodsInfo schema=\"circuits\" method=\"id\" />\r\n                            <ReqResContain>\r\n                                <Request props={CircuitById}></Request>\r\n                                <Response props={OneCircuitResponse}></Response>\r\n                            </ReqResContain>\r\n                        </DivBodyComponents>\r\n                    \r\n                </DivBodyH1>\r\n\r\n            </ContentContainer>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default DocumentationLeftMenu\r\n","import React from 'react';\n\nimport DocumentationLeftMenu from '../components/ui/DocumentationLeftMenu';\n// import Pilots from \"../\"\nconst Documentation = () => {\n    return (\n        <>\n            <DocumentationLeftMenu></DocumentationLeftMenu>\n        </>\n    )\n}\nexport default Documentation;\n\n\n/*\n/drivers/ ->todos\n/drivers/id/:id ->1 driver\n/drivers/items -> filtro\n\n/team/ ->todos\n/team/id/:id ->1 driver\n/team/items -> filtro\n\n/circuits/ ->todos\n/circuits/id/:id -> 1 circuito\n/collaboration\n/contact\n*/","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {useFormik} from \"formik\";\nimport styled from 'styled-components';\nimport axios from  'axios';\nimport { useState } from 'react';\n\nconst desktopStartWidth = 576;\n\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\n\n// background-color: #15151e;\nconst ContactContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content:space-evenly;\nalign-items: center;\ntext-align: center;\nheight: 80vh;\n`\n\nconst ContactTitle = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 1.05rem;\n  padding: 30px 0;\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-block-start: 0;\n  margin-block-end: 0;\n`\nconst FormContain = styled.form`\ndisplay: flex;\nflex-direction: column;\ntext-align: center;\nmargin: 15px;\n`\nconst TextLabel = styled.label`\n    padding: 10px 0 ;\n    display: ${(props) => (props.validations === \"true\" ? \"block\" : \"inline\")};\n    font-weight: 600;\n    font-size: ${props => props.FastLapSize === 'true' ? '1.35rem' : '1rem'};`\n\nconst InputContain = styled.input`\nmargin-bottom: 10px;\nwidth: 300px;\nalign-self: center;\n`\n\nconst TextContain = styled.textarea`\nmargin-bottom: 10px;\nwidth: 600px;\nalign-self: center;\n${mobile} {\n    width: 300px;\n}\n`\n\nconst ButtonForm = styled.button`\nborder: none;\nfont-size: 13px;\nline-height: 15px;\ntext-transform: uppercase;\nfont-weight: bolder;\ncolor: white;\nbackground-color: #e10600;\nborder-radius: 5px;\nmargin: 10px;\nwidth: 100px;\nalign-self: center;\npadding: 12px;\ncursor: pointer;\nborder: 3px solid #e10600;\n&&:hover{\n    transition:.5s;\n    background-color: white;\n    color: #e10600;\n}\n`\nconst ErrorText = styled.p`\ncolor: #e10600;\n`\n\nconst FormContact = () => {\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.text) {\n            errors.text = <FormattedMessage\n            id=\"contact.required\"\n            defaultMessage=\"required\" />;\n        } else if (values.text.length < 19) {\n            errors.text = <FormattedMessage\n            id=\"contact.text.error\"\n            defaultMessage=\"error\" />;\n        }\n\n        if (!values.name) {\n            errors.name = <FormattedMessage\n            id=\"contact.required\"\n            defaultMessage=\"required\" />;\n        } else if (values.name.length < 2) {\n            errors.name = <FormattedMessage\n            id=\"contact.name.error\"\n            defaultMessage=\"error\" />;\n        }\n\n        if (!values.email) {\n            errors.email = <FormattedMessage\n            id=\"contact.required\"\n            defaultMessage=\"required\" />;\n        } else if (values.email.length < 4) {\n            errors.email = <FormattedMessage\n            id=\"contact.email.error\"\n            defaultMessage=\"error\" />;\n        }\n\n        return errors;\n    }\n\n    const BASEURL = \"https://formula1s.herokuapp.com\";\n    const ITEMSURL = \"/contact/email\";\n\n    const [messageSent, setMessageSent] = useState(\"\");\n\n    const formik = useFormik({\n        initialValues: {\n            text: \"\",\n            name: \"\",\n            email: \"\",\n        },\n        validate,\n        onSubmit: (values) => { \n            console.log(values)\n            axios.post(BASEURL + ITEMSURL, values).then(\n                (res) => {\n                    setMessageSent(<FormattedMessage\n                    id=\"contact.sent\"\n                    defaultMessage=\"sent message\" />);\n\n                    setTimeout(function() {window.location.href=\"/\";\n                }, 3000);\n                },\n                (error) => {\n                    console.log(error);\n                }\n              );\n        },\n    });\n\n    return (\n        <ContactContainer>\n        <div>\n            <ContactTitle><FormattedMessage\n            id=\"contact.title\"\n            defaultMessage=\"contact\" /> </ContactTitle>\n        </div>\n        <FormContain onSubmit={formik.handleSubmit}>\n\n            <FormattedMessage id=\"contact.placeholder.example\"\n            defaultMessage=\"text-here\">\n                {placeholder =>\n                <TextContain\n                id=\"text\"\n                name=\"text\"\n                 onChange={formik.handleChange}\n                 value={formik.values.text}\n                 placeholder={placeholder} rows=\"8\" cols=\"100\" />}\n            </FormattedMessage>\n            {formik.touched.text && formik.errors.text ? (\n                <ErrorText>{formik.errors.text}</ErrorText>\n            ) : null}\n\n            <TextLabel htmlFor=\"name\"><FormattedMessage\n            id=\"contact.name\"\n            defaultMessage=\"name\" /></TextLabel>\n            <InputContain\n            id=\"name\"\n            name=\"name\"\n             onChange={formik.handleChange}\n             value={formik.values.name}></InputContain>\n             {formik.touched.name && formik.errors.name ? (\n                <ErrorText>{formik.errors.name}</ErrorText>\n            ) : null}\n\n             <TextLabel htmlFor=\"email\"><FormattedMessage\n             id=\"contact.email\"\n             defaultMessage=\"email\" /></TextLabel>\n             <InputContain\n             id=\"email\"\n             name=\"email\"\n             onChange={formik.handleChange}\n             value={formik.values.email}></InputContain>\n             {formik.touched.email && formik.errors.email ? (\n                <ErrorText>{formik.errors.email}</ErrorText>\n            ) : null}\n\n             <ButtonForm type=\"submit\"><FormattedMessage\n             id=\"contact.button\"\n             defaultMessage=\"send\" /></ButtonForm>\n             <p>{messageSent}</p>\n        </FormContain>\n        </ContactContainer>\n    )\n}\n\nexport default FormContact;\n","import React from 'react';\nimport FormContact from \"../components/ui/FormContact\";\n\nconst Contact = () => {\n    return (\n        <>\n            <FormContact></FormContact>\n        </>\n    )\n}\n\nexport default Contact;\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\n\r\nconst desktopStartWidth = 576;\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\r\n// eslint-disable-next-line no-unused-vars\r\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\r\n\r\n// background-color: #15151e;\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  display: ${(props) => (props.state === \"Circuit\" ? \"block\" : \"none\")};\r\n`;\r\nconst ContactTitle = styled.p`\r\npadding-bottom: 20px;\r\nfont-size: 20px ;\r\n`\r\nconst Label = styled.label`\r\n\r\n  padding: 10px 0 ;\r\n  display: ${(props) => (props.validations === \"true\" ? \"block\" : \"inline\")};\r\n  font-weight: 600;\r\n  font-size: ${props => props.FastLapSize === 'true' ? '1.35rem' : '1rem'};\r\n  ${desktop} {\r\n  width: 60vw;\r\n\t}\r\n`;\r\n\r\nconst FormContain = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\n${desktop} {\r\n  flex-direction: row;\r\n\tflex-wrap: wrap;\r\n\t}\r\n`\r\n\r\nconst FormContributionH1 = styled.h3`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n  padding: 20px 0;\r\n  margin: 0;\r\n  color: #e10600;\r\n`;\r\n\r\nconst ButtonForm = styled.button`\r\nborder: none;\r\nfont-size: 13px;\r\nline-height: 15px;\r\ntext-transform: uppercase;\r\nfont-weight: bolder;\r\ncolor: white;\r\nbackground-color: #e10600;\r\nborder-radius: 5px;\r\nmargin: 25px auto 30px;\r\nwidth: 150px;\r\nalign-self: center;\r\npadding: 15px;\r\ncursor: pointer;\r\nborder: 3px solid #e10600;\r\n&&:hover{\r\n    transition:.5s;\r\n    background-color: white;\r\n    color: #e10600;\r\n}\r\n${desktop} {\r\n  width: 30vw;\r\n\r\n\t}\r\n`\r\n\r\nconst InputContain = styled.input`\r\nmargin-bottom: 10px;\r\nmax-width: 300px;\r\nalign-self: center;\r\ncolor: #15151e;\r\nfont-size: 1rem;\r\nborder-radius: 5px;\r\n`\r\n\r\nconst FormContributionCircuit = (state) => {\r\n\r\n  const [messageSent, setMessageSent] = useState(\"\");\r\n\r\n  /* const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.userEmail) {\r\n      errors.userEmail = \"Required\";\r\n    } else if (values.userEmail.length < 7) {\r\n      errors.userEmail = \"Invalid email\";\r\n    }\r\n    return errors;\r\n  } */\r\n\r\n  let objectExample = {\r\n        \"name\": \"\",\r\n        \"email\": \"\",\r\n        \"team\": {},\r\n        \"circuit\": {},\r\n        \"driver\": {}\r\n      }\r\n\r\n  const formikCircuits = useFormik({\r\n    initialValues: {\r\n      circuit: {\r\n        name: \"\",\r\n        nationality: \"\",\r\n        length: \"\",\r\n        corners: \"\",\r\n        fastLap: {\r\n          driver: \"\",\r\n          time: \"\",\r\n          team: \"\",\r\n          year: \"\"\r\n        },\r\n        creation: \"\",\r\n        capacity: \"\",\r\n        image: \"\",\r\n        flat: \"\",\r\n      },\r\n      userName: \"\",\r\n      userEmail: \"\"\r\n    },/* \r\n    validate, */\r\n    onSubmit: (formikCircuits) => {\r\n      setMessageSent(<FormattedMessage\r\n        id=\"contact.sent\"\r\n        defaultMessage=\"sent message\" />);\r\n      objectExample.name = formikCircuits.userName\r\n      objectExample.email = formikCircuits.userEmail\r\n      objectExample.circuit = formikCircuits.circuit\r\n      handleSubmit(objectExample);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    console.log(e)\r\n    const response = await axios.post(`https://formula1s.herokuapp.com/collaboration`,\r\n      objectExample\r\n    );\r\n    console.log(response)\r\n  }\r\n\r\n\r\n  return (\r\n    <FormContainer state={state.state.value}>\r\n      <FormContain onSubmit={formikCircuits.handleSubmit}>\r\n        <Label htmlFor=\"circuit.name\">\r\n          <FormattedMessage id=\"form.name\" defaultMessage=\"Name\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.name}\r\n          id=\"circuit.name\"\r\n          name=\"circuit.name\"\r\n        />\r\n        <Label htmlFor=\"circuit.nationality\">\r\n          <FormattedMessage\r\n            id=\"form.nationality\"\r\n            defaultMessage=\"Nationality\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.nationality}\r\n          id=\"circuit.nationality\"\r\n          name=\"circuit.nationality\"\r\n        />\r\n        <Label htmlFor=\"circuit.length\">\r\n          <FormattedMessage id=\"form.length\" defaultMessage=\"Length\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.length}\r\n          id=\"circuit.length\"\r\n          name=\"circuit.length\"\r\n        />\r\n        <Label htmlFor=\"circuit.corners\">\r\n          <FormattedMessage id=\"form.corners\" defaultMessage=\"Corners\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.corners}\r\n          id=\"circuit.corners\"\r\n          name=\"circuit.corners\"\r\n        />\r\n        <FormContributionH1 FastLap=\"true\" FastLapSize=\"true\" htmlFor=\"circuit.fastLap\">\r\n          <FormattedMessage id=\"form.fastLap\" defaultMessage=\"FastLap\" />\r\n        </FormContributionH1>\r\n        <Label htmlFor=\"circuit.fastLap.driver\">\r\n          <FormattedMessage id=\"form.fastLap.driver\" defaultMessage=\"FastLap Driver\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.fastLap.driver}\r\n          id=\"circuit.fastLap.driver\"\r\n          name=\"circuit.fastLap.driver\"\r\n        />\r\n        <Label htmlFor=\"circuit.fastLap.time\">\r\n          <FormattedMessage id=\"form.fastLap.time\" defaultMessage=\"FastLap Time\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.fastLap.time}\r\n          id=\"circuit.fastLap.time\"\r\n          name=\"circuit.fastLap.time\"\r\n        />\r\n        <Label htmlFor=\"circuit.fastLap.team\">\r\n          <FormattedMessage id=\"form.fastLap.team\" defaultMessage=\"FastLap Team\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.fastLap.team}\r\n          id=\"circuit.fastLap.team\"\r\n          name=\"circuit.fastLap.team\"\r\n        />\r\n        <Label htmlFor=\"circuit.fastLap.year\">\r\n          <FormattedMessage id=\"form.fastLap.year\" defaultMessage=\"FastLap year\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.fastLap.year}\r\n          id=\"circuit.fastLap.year\"\r\n          name=\"circuit.fastLap.year\"\r\n        />\r\n        <Label htmlFor=\"circuit.creation\">\r\n          <FormattedMessage id=\"form.creation\" defaultMessage=\"Creation\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.creation}\r\n          id=\"circuit.creation\"\r\n          name=\"circuit.creation\"\r\n        />\r\n        <Label htmlFor=\"circuit.capacity\">\r\n          <FormattedMessage id=\"form.capacity\" defaultMessage=\"Capacity\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.capacity}\r\n          id=\"circuit.capacity\"\r\n          name=\"circuit.capacity\"\r\n        />\r\n        <Label htmlFor=\"circuit.image\">\r\n          <FormattedMessage id=\"form.image\" defaultMessage=\"Image\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.image}\r\n          id=\"circuit.image\"\r\n          name=\"circuit.image\"\r\n        />\r\n        <Label htmlFor=\"circuit.flat\">\r\n          <FormattedMessage id=\"form.flat\" defaultMessage=\"Flat\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.circuit.flat}\r\n          id=\"circuit.flat\"\r\n          name=\"circuit.flat\"\r\n        />\r\n        <FormContributionH1>\r\n          <FormattedMessage\r\n            id=\"collaborate.select.userInfo\"\r\n            defaultMessage=\"Type your personal info\"\r\n          />\r\n        </FormContributionH1>\r\n        <Label htmlFor=\"userName\">\r\n          <FormattedMessage\r\n            id=\"contact.name\"\r\n            defaultMessage=\"Name\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          value={formikCircuits.values.userName}\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n        />\r\n        <Label htmlFor=\"userEmail\">\r\n          <FormattedMessage\r\n            id=\"contact.email\"\r\n            defaultMessage=\"Email\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikCircuits.handleChange}\r\n          onBlur={formikCircuits.handleBlur}\r\n          value={formikCircuits.values.userEmail}\r\n          id=\"userEmail\"\r\n          name=\"userEmail\"\r\n        />\r\n        {/* {formikCircuits.touched.userEmail && formikCircuits.errors.userEmail ? (\r\n          <div className=\"error\">{formikCircuits.errors.userEmail}</div>\r\n        ) : null} */}\r\n        <ButtonForm type=\"submit\">\r\n          <FormattedMessage id=\"button.enviar\" defaultMessage=\"Send\" />\r\n        </ButtonForm>\r\n        <ContactTitle>{messageSent}</ContactTitle>\r\n      </FormContain>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default FormContributionCircuit;\r\n","import { FormattedMessage } from \"react-intl\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\n\r\nconst desktopStartWidth = 576;\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\r\n// eslint-disable-next-line no-unused-vars\r\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\r\n\r\n// background-color: #15151e;\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  display: ${(props) => (props.state === \"Team\" ||  props.state === \"Circuit\" ? \"none\" : \"block\")};\r\n`;\r\nconst ContactTitle = styled.p`\r\ncolor: white;\r\npadding-bottom: 20px;\r\nfont-size: 20px ;\r\n`\r\nconst Label = styled.label`\r\n  padding: 10px 0 ;\r\n  display: ${(props) => (props.validations === \"true\" ? \"block\" : \"inline\")};\r\n  font-weight: 600;\r\n  font-size: ${props => props.FastLapSize === 'true' ? '1.05rem' : '1.15rem'};\r\n  ${desktop} {\r\n  width: 60vw;\r\n\t}\r\n`;\r\n\r\nconst FormContain = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\n${desktop} {\r\n  flex-direction: row;\r\n\tflex-wrap: wrap;\r\n\t}\r\n`\r\n\r\nconst FormContributionH1 = styled.h3`\r\n  width: 100%;\r\n  text-align: center; \r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n  padding: 20px 0;\r\n  margin: 0;\r\n  color: #e10600;\r\n`;\r\n\r\nconst ButtonForm = styled.button`\r\nborder: none;\r\nfont-size: 13px;\r\nline-height: 15px;\r\ntext-transform: uppercase;\r\nfont-weight: bolder;\r\ncolor: white;\r\nbackground-color: #e10600;\r\nborder-radius: 5px;\r\nmargin: 25px auto 30px;\r\nwidth: 150px;\r\nalign-self: center;\r\npadding: 15px;\r\ncursor: pointer;\r\nborder: 3px solid #e10600;\r\n&&:hover{\r\n    transition:.5s;\r\n    background-color: white;\r\n    color: #e10600;\r\n}\r\n${desktop} {\r\n  width: 30vw;\r\n\r\n\t}\r\n`\r\n\r\nconst InputContain = styled.input`\r\nmargin-bottom: 10px;\r\nmax-width: 300px;\r\nalign-self: center;\r\ncolor: #15151e;\r\nfont-size: 1rem;\r\nborder-radius: 5px;\r\n`\r\n\r\nconst FormContributionDriver = (option) => {\r\n\r\n  const [messageSent, setMessageSent] = useState(\"\");\r\n\r\n  /* const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.userEmail) {\r\n      errors.userEmail = \"Required\";\r\n    } else if (values.userEmail.length < 4) {\r\n      errors.userEmail = \"Must be 5 characters or more\";\r\n    }\r\n    return errors;\r\n  } */\r\n\r\n  let objectModel = {\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"team\": {},\r\n    \"circuit\": {},\r\n    \"driver\": {}\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      driver: {\r\n      name: \"\",\r\n      nationality: \"\",\r\n      birthDate: \"\",\r\n      height: \"\",\r\n      weight: \"\",\r\n      team: [\"\"],\r\n      teamHistory: [\"\"],\r\n      championship: [\"\"],\r\n      victories: \"\",\r\n      podium: \"\",\r\n      debut: \"\",\r\n      image: \"\",\r\n      officialSite: [\"\"]\r\n      },\r\n      userName: \"\",\r\n      userEmail: \"\"\r\n    },/* \r\n    validate, */\r\n    onSubmit: (formik) => {\r\n      setMessageSent(<FormattedMessage\r\n        id=\"contact.sent\"\r\n        defaultMessage=\"sent message\" />);\r\n      objectModel.name = formik.userName\r\n      objectModel.email = formik.userEmail\r\n      objectModel.driver = formik.driver\r\n      handleSubmit(objectModel);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    console.log(e)\r\n    const response = await axios.post(`https://formula1s.herokuapp.com/collaboration`,\r\n    objectModel\r\n    );\r\n    console.log(response)\r\n  }\r\n\r\n\r\n  return (\r\n    <FormContainer state={option.state.value}>\r\n      <FormContain onSubmit={formik.handleSubmit}>\r\n        <Label htmlFor=\"driver.name\">\r\n          <FormattedMessage id=\"form.name\" defaultMessage=\"Name\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.name}\r\n          id=\"driver.name\"\r\n          name=\"driver.name\"\r\n        />\r\n        <Label htmlFor=\"driver.nationality\">\r\n          <FormattedMessage\r\n            id=\"form.nationality\"\r\n            defaultMessage=\"Nationality\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.nationality}\r\n          id=\"driver.nationality\"\r\n          name=\"driver.nationality\"\r\n        />\r\n        <Label htmlFor=\"driver.birthDate\">\r\n          <FormattedMessage id=\"form.birthDate\" defaultMessage=\"BirthDate\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.birthDate}\r\n          id=\"driver.birthDate\"\r\n          name=\"driver.birthDate\"\r\n        />\r\n        <Label htmlFor=\"driver.height\">\r\n          <FormattedMessage id=\"form.height\" defaultMessage=\"Height\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.height}\r\n          id=\"driver.height\"\r\n          name=\"driver.height\"\r\n        />\r\n        <Label htmlFor=\"driver.weight\">\r\n          <FormattedMessage id=\"form.weight\" defaultMessage=\"Weight\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.weight}\r\n          id=\"driver.weight\"\r\n          name=\"driver.weight\"\r\n        />\r\n        <Label htmlFor=\"driver.team\">\r\n          <FormattedMessage id=\"form.team\" defaultMessage=\"Team\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.team}\r\n          id=\"driver.team\"\r\n          name=\"driver.team\"\r\n        />\r\n        <Label htmlFor=\"driver.teamHistory\">\r\n          <FormattedMessage\r\n            id=\"form.teamHistory\"\r\n            defaultMessage=\"TeamHistory\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.teamHistory}\r\n          id=\"driver.teamHistory\"\r\n          name=\"driver.teamHistory\"\r\n        />\r\n        <Label htmlFor=\"driver.championship\">\r\n          <FormattedMessage\r\n            id=\"form.championship\"\r\n            defaultMessage=\"Championship\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.championship}\r\n          id=\"driver.championship\"\r\n          name=\"driver.championship\"\r\n        />\r\n        <Label htmlFor=\"driver.victories\">\r\n          <FormattedMessage id=\"form.victories\" defaultMessage=\"Victories\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.victories}\r\n          id=\"driver.victories\"\r\n          name=\"driver.victories\"\r\n        />\r\n        <Label htmlFor=\"driver.podium\">\r\n          <FormattedMessage id=\"form.podium\" defaultMessage=\"Podium\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.podium}\r\n          id=\"driver.podium\"\r\n          name=\"driver.podium\"\r\n        />\r\n        <Label htmlFor=\"driver.debut\">\r\n          <FormattedMessage id=\"form.debut\" defaultMessage=\"Debut\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.debut}\r\n          id=\"driver.debut\"\r\n          name=\"driver.debut\"\r\n        />\r\n        <Label htmlFor=\"driver.image\">\r\n          <FormattedMessage id=\"form.image\" defaultMessage=\"Image\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.image}\r\n          id=\"driver.image\"\r\n          name=\"driver.image\"\r\n        />\r\n        <Label htmlFor=\"driver.officialSite\">\r\n          <FormattedMessage\r\n            id=\"form.official.site\"\r\n            defaultMessage=\"OfficialSite\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.driver.officialSite}\r\n          id=\"driver.officialSite\"\r\n          name=\"driver.officialSite\"\r\n        />\r\n        <FormContributionH1>\r\n          <FormattedMessage\r\n            id=\"collaborate.select.userInfo\"\r\n            defaultMessage=\"Type your personal info\"\r\n          />\r\n        </FormContributionH1>\r\n        <Label htmlFor=\"userName\">\r\n          <FormattedMessage\r\n            id=\"contact.name\"\r\n            defaultMessage=\"Name\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          value={formik.values.userName}\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n        />\r\n        <Label htmlFor=\"userEmail\">\r\n          <FormattedMessage\r\n            id=\"contact.email\"\r\n            defaultMessage=\"Email\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.userEmail}\r\n          id=\"userEmail\"\r\n          name=\"userEmail\"\r\n        />\r\n      {/*   {formik.touched.userEmail && formik.errors.userEmail ? (\r\n          <div className=\"error\">{formik.errors.userEmail}</div>\r\n        ) : null} */}\r\n        <ButtonForm type=\"submit\">\r\n          <FormattedMessage id=\"button.enviar\" defaultMessage=\"Send\" />\r\n        </ButtonForm>\r\n        <ContactTitle>{messageSent}</ContactTitle>\r\n      </FormContain>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default FormContributionDriver;\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\n\r\nconst desktopStartWidth = 576;\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\r\n// eslint-disable-next-line no-unused-vars\r\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\r\n\r\n// background-color: #15151e;\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  display: ${(props) => (props.state === \"Team\" ? \"block\" : \"none\")};\r\n`;\r\nconst ContactTitle = styled.p`\r\ncolor: white;\r\npadding-bottom: 20px;\r\nfont-size: 20px ;\r\n`\r\nconst Label = styled.label`\r\n  padding: 10px 0 ;\r\n  display: ${(props) => (props.validations === \"true\" ? \"block\" : \"inline\")};\r\n  font-weight: 600;\r\n  font-size: ${props => props.FastLapSize === 'true' ? '1.35rem' : '1.15rem'};\r\n  ${desktop} {\r\n  width: 60vw;\r\n\t}\r\n`;\r\n\r\nconst FormContain = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\n${desktop} {\r\n  flex-direction: row;\r\n\tflex-wrap: wrap;\r\n\t}\r\n`\r\n\r\nconst FormContributionH1 = styled.h3`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n  padding: 20px 0;\r\n  margin: 0;\r\n  color: #e10600;\r\n`;\r\n\r\nconst ButtonForm = styled.button`\r\nborder: none;\r\nfont-size: 13px;\r\nline-height: 15px;\r\ntext-transform: uppercase;\r\nfont-weight: bolder;\r\ncolor: white;\r\nbackground-color: #e10600;\r\nborder-radius: 5px;\r\nmargin: 25px auto 30px;\r\nwidth: 150px;\r\nalign-self: center;\r\npadding: 15px;\r\ncursor: pointer;\r\nborder: 3px solid #e10600;\r\n&&:hover{\r\n    transition:.5s;\r\n    background-color: white;\r\n    color: #e10600;\r\n}\r\n${desktop} {\r\n  width: 30vw;\r\n\r\n\t}\r\n`\r\n\r\nconst InputContain = styled.input`\r\nmargin-bottom: 10px;\r\nmax-width: 300px;\r\nalign-self: center;\r\ncolor: #15151e;\r\nfont-size: 1rem;\r\nborder-radius: 5px;\r\n`\r\n\r\nconst FormContributionTeam = (state) => {\r\n\r\n  const [messageSent, setMessageSent] = useState(\"\");\r\n\r\n /*  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.userEmail) {\r\n      errors.userEmail = \"Required\";\r\n    } else if (values.userEmail.length < 4) {\r\n      errors.userEmail = \"Must be 5 characters or more\";\r\n    }\r\n    return errors;\r\n  } */\r\n\r\n  let objectModel = {\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"team\": {},\r\n    \"circuit\": {},\r\n    \"driver\": {}\r\n  }\r\n\r\n  const formikTeams = useFormik({\r\n    initialValues: {\r\n      team: {\r\n        name: \"\",\r\n        nationality: \"\",\r\n        logo: \"\",\r\n        creation: \"\",\r\n        debut: \"\",\r\n        location: \"\",\r\n        website: \"\",\r\n        drivers: [\"\"],\r\n        active: \"\",\r\n        chasis: \"\",\r\n        engine: \"\",\r\n        driversChampionships: [\"\"],\r\n        teamChampionships: [\"\"]\r\n      },\r\n      userName: \"\",\r\n      userEmail: \"\"\r\n    },/* \r\n    validate, */\r\n    onSubmit: (formikTeams) => {\r\n      setMessageSent(<FormattedMessage\r\n        id=\"contact.sent\"\r\n        defaultMessage=\"sent message\" />);\r\n      objectModel.name = formikTeams.userName\r\n      objectModel.email = formikTeams.userEmail\r\n      objectModel.team = formikTeams.team\r\n      handleSubmit(objectModel);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    console.log(e)\r\n    const response = await axios.post(`https://formula1s.herokuapp.com/collaboration`,\r\n    objectModel\r\n    );\r\n    console.log(response)\r\n  }\r\n\r\n  return (\r\n    <FormContainer state={state.state.value}>\r\n      <FormContain onSubmit={formikTeams.handleSubmit}>\r\n        <Label htmlFor=\"team.name\">\r\n          <FormattedMessage id=\"form.name\" defaultMessage=\"Name\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.name}\r\n          id=\"team.name\"\r\n          name=\"team.name\"\r\n        />\r\n        <Label htmlFor=\"team.nationality\">\r\n          <FormattedMessage\r\n            id=\"form.nationality\"\r\n            defaultMessage=\"Nationality\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.nationality}\r\n          id=\"team.nationality\"\r\n          name=\"team.nationality\"\r\n        />\r\n        <Label htmlFor=\"team.logo\">\r\n          <FormattedMessage id=\"form.logo\" defaultMessage=\"Logo\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.logo}\r\n          id=\"team.logo\"\r\n          name=\"team.logo\"\r\n        />\r\n        <Label htmlFor=\"team.creation\">\r\n          <FormattedMessage id=\"form.creation\" defaultMessage=\"Creation\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.creation}\r\n          id=\"team.creation\"\r\n          name=\"team.creation\"\r\n        />\r\n        <Label htmlFor=\"team.debut\">\r\n          <FormattedMessage id=\"form.debut\" defaultMessage=\"Debut\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.debut}\r\n          id=\"team.debut\"\r\n          name=\"team.debut\"\r\n        />\r\n        <Label htmlFor=\"team.location\">\r\n          <FormattedMessage id=\"form.location\" defaultMessage=\"Location\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.location}\r\n          id=\"team.location\"\r\n          name=\"team.location\"\r\n        />\r\n        <Label htmlFor=\"team.website\">\r\n          <FormattedMessage id=\"form.website\" defaultMessage=\"Website\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.website}\r\n          id=\"team.website\"\r\n          name=\"team.website\"\r\n        />\r\n        <Label htmlFor=\"team.drivers\">\r\n          <FormattedMessage id=\"form.drivers\" defaultMessage=\"Drivers\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.drivers}\r\n          id=\"team.drivers\"\r\n          name=\"team.drivers\"\r\n        />\r\n        <Label htmlFor=\"team.active\">\r\n          <FormattedMessage id=\"form.active\" defaultMessage=\"Active\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.active}\r\n          id=\"team.active\"\r\n          name=\"team.active\"\r\n        />\r\n        <Label htmlFor=\"team.chasis\">\r\n          <FormattedMessage id=\"form.chasis\" defaultMessage=\"Chasis\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.chasis}\r\n          id=\"team.chasis\"\r\n          name=\"team.chasis\"\r\n        />\r\n        <Label htmlFor=\"team.engine\">\r\n          <FormattedMessage id=\"form.engine\" defaultMessage=\"Engine\" />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.engine}\r\n          id=\"team.engine\"\r\n          name=\"team.engine\"\r\n        />\r\n        <Label htmlFor=\"team.driversChampionships\">\r\n          <FormattedMessage\r\n            id=\"form.drivers.championships\"\r\n            defaultMessage=\"Drivers Championships\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.driversChampionships}\r\n          id=\"team.driversChampionships\"\r\n          name=\"team.driversChampionships\"\r\n        />\r\n        <Label htmlFor=\"team.teamChampionships\">\r\n          <FormattedMessage\r\n            id=\"form.team.championships\"\r\n            defaultMessage=\"Team Championships\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.team.teamChampionships}\r\n          id=\"team.teamChampionships\"\r\n          name=\"team.teamChampionships\"\r\n        />\r\n        <FormContributionH1>\r\n          <FormattedMessage\r\n            id=\"collaborate.select.userInfo\"\r\n            defaultMessage=\"Type your personal info\"\r\n          />\r\n        </FormContributionH1>\r\n        <Label htmlFor=\"userName\">\r\n          <FormattedMessage\r\n            id=\"contact.name\"\r\n            defaultMessage=\"Name\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          value={formikTeams.values.userName}\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n        />\r\n        <Label htmlFor=\"userEmail\">\r\n          <FormattedMessage\r\n            id=\"contact.email\"\r\n            defaultMessage=\"Email\"\r\n          />\r\n        </Label>\r\n        <InputContain\r\n          onChange={formikTeams.handleChange}\r\n          onBlur={formikTeams.handleBlur}\r\n          value={formikTeams.values.userEmail}\r\n          id=\"userEmail\"\r\n          name=\"userEmail\"\r\n        />\r\n      {/*   <Label validations=\"true\">{formikTeams.touched.userEmail && formikTeams.errors.userEmail ? (\r\n          <div className=\"error\">{formikTeams.errors.userEmail}</div>\r\n        ) : null}</Label> */}\r\n        <ButtonForm type=\"submit\">\r\n          <FormattedMessage id=\"button.enviar\" defaultMessage=\"Send\" />\r\n        </ButtonForm>\r\n        \r\n        <ContactTitle>{messageSent}</ContactTitle>\r\n      </FormContain>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default FormContributionTeam;\r\n","/* eslint-disable react/style-prop-object */\nimport React, { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport styled from \"styled-components\";\nimport FormContributionCircuit from \"./FormContributionCircuit\";\nimport FormContributionDriver from \"./FormContributionDriver\";\nimport FormContributionTeam from \"./FormContributionTeam\";\n\n// background-color: #15151e;\nconst FormContributionContainer = styled.div`\n  \n`;\n\nconst FormContributionH1 = styled.h1`\n  width: 100%;\n  text-align: center;\n  font-size: 1.05rem;\n  padding: 30px 0;\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-block-start: 0;\n  margin-block-end: 0;\n`;\n\nconst FormContributionSelect = styled.select`\n  margin: 0 auto;\n  width: 100px;\n  height: 30px;\n  display: block;\n  text-align: center;\n  font-size: 1rem;\n  font-weight: bold;\n  color: whitesmoke;\n  background-color: #e10600;\n  border-radius: 5px;\n  `\n\nconst FormContribution = () => {\n  const [option, setOption] = useState(\"\");\n\n  const handleChange = (e) => {\n    setOption({ value: e.target.value });\n  };\n\n  return (\n    <>\n      <FormContributionContainer>\n        <FormContributionH1>\n          <FormattedMessage\n            id=\"collaborate.title\"\n            defaultMessage=\"If you want to contribute to the collections you can do it here:\"\n          />\n        </FormContributionH1>\n        <FormContributionSelect options={option} onChange={handleChange}>\n          <FormattedMessage\n            id=\"collaborate.select.driver\"\n            defaultMessage=\"Driver\"\n          >\n            {(id) => <option value={id}>{id}</option>}\n          </FormattedMessage>\n          <FormattedMessage id=\"collaborate.select.team\" defaultMessage=\"Team\">\n            {(id) => <option value={id}>{id}</option>}\n          </FormattedMessage>\n          <FormattedMessage\n            id=\"collaborate.select.circuit\"\n            defaultMessage=\"Circuit\"\n          >\n            {(id) => <option value={id}>{id}</option>}\n          </FormattedMessage>\n        </FormContributionSelect>\n      </FormContributionContainer>\n      <FormContributionDriver state={option}></FormContributionDriver>\n      <FormContributionTeam state={option}></FormContributionTeam>\n      <FormContributionCircuit state={option}></FormContributionCircuit>\n    </>\n  );\n};\n\nexport default FormContribution;\n","import React from 'react';\nimport FormContribution from '../components/ui/FormContribution';\n\nconst Contribution = () => {\n    return (\n        <>\n            <FormContribution></FormContribution>\n        </>\n    )\n}\n\nexport default Contribution;\n","import React from 'react';\nimport { FormattedMessage } from \"react-intl\";\nimport styled from 'styled-components';\n\n// background-color:${props => props.backgroundColor === 'light' ? 'whitesmoke' : '#1f1f27'};\nconst QuestionContainer = styled.div`\n    \n    margin: 0 auto;\n    padding: 0px 1.5rem;\n    max-width: 960px;\n    min-height: 50vh;`\n\nconst QuestionH1 = styled.h1`\n    width: 100%;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-top: 0;\n    padding: 25px 0;\n    color: ${props => props.color === 'light' ? '#e10600' : 'whitesmoke'};\n    `\nconst QuestionH2 = styled.h2`\n    width: 100%;\n    text-align: left;\n    font-weight: bold;\n    font-size: 1.75rem;\n    padding: 20px 0;\n    text-decoration: underline;\n    `\n\nconst QuestionContent = styled.p`\n    width: 100%;\n    text-align: left;\n    font-weight: 400;\n    font-size: 1.25rem;\n    line-height: 1.75;\n    margin-block-start: 0;\n    margin-block-end: 0;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-bottom: ${props => props.borderBottom === 'true' ? '20px' : '0px'};\n`\n\nconst QuestionA = styled.a`\n    color: ${props => props.color === 'light' ? '#e10600' : 'whitesmoke'} ;\n    font-weight: 700;\n    font-size: 1.05rem ;\n    text-decoration: #1f1f27;\n    cursor: pointer;\n    display: block;\n    `\n\nconst Question = () => {\n    return (\n        <QuestionContainer backgroundColor=\"light\">\n            <QuestionH1 color=\"light\">\n            <FormattedMessage\n                    id=\"about.title\"\n                    defaultMessage=\"Information about the project\"/>\n            </QuestionH1>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.what\"\n                    defaultMessage=\"What is this?\"/>\n            </QuestionH2>\n            <QuestionContent color=\"light\">\n            <FormattedMessage\n                    id=\"about.response.what\"\n                    defaultMessage=\"The Formula 1's API is a REST(ish) and GraphQL API based on the Formula 1 competition. You will have access to about lot of drivers, teams and circuits.\"/>\n            </QuestionContent>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.who\"\n                    defaultMessage=\"Who are you?\"/>\n            </QuestionH2>\n            <QuestionContent color=\"light\">\n            <FormattedMessage\n                    id=\"about.response.who\"\n                    defaultMessage=\"We are Project F1, a group of people who likes to develop things. We are students from Upgrade Hub, which is a tech school based in Madrid, Spain. All of us are Full-Stack developers.\"/>\n            </QuestionContent>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.why\"\n                    defaultMessage=\"Why did you build this?\"/>\n            </QuestionH2>\n            <QuestionContent color=\"light\">\n            <FormattedMessage\n                    id=\"about.response.why\"\n                    defaultMessage=\"Because we were really interested in the idea of writing an open source project and also because this project has done us the opportunity to improve a lot of developer skills.\"/>\n            </QuestionContent>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.stuff\"\n                    defaultMessage=\"Technical stuff?\"/>\n            </QuestionH2>\n            <QuestionContent color=\"light\">\n            <FormattedMessage\n                    id=\"about.response.stuff\"\n                    defaultMessage=\"We use Node and MongoDB to serve the API. All the data is formatted in json and the entire project is done with React native, Styled Components and React Intl in order to translate the project.\"/>\n            </QuestionContent>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.how\"\n                    defaultMessage=\"How can I contribute to the project?\"/>\n            </QuestionH2>\n            <QuestionContent color=\"light\">\n                <FormattedMessage\n                    id=\"about.response.how\"\n                    defaultMessage=\"You can help us to keep the collections alive. Also, you can collab with us here:\"/>\n            <QuestionA color=\"light\"\n                target=\"_blank\"\n                href=\"https://vtrev05.github.io/Api-front/#/collaborate\">\n                <FormattedMessage\n                    id=\"about.response.how.link\"\n                    defaultMessage=\"https://vtrev05.github.io/Api-front/#/collaborate\"/>\n            </QuestionA>\n            </QuestionContent>\n            <QuestionH2 color=\"light\">\n            <FormattedMessage\n                    id=\"about.question.copyright\"\n                    defaultMessage=\"Copyright?\"/>\n            </QuestionH2>\n            <QuestionContent borderBottom=\"true\" color=\"light\">\n            <FormattedMessage\n                    id=\"about.response.copyright\"\n                    defaultMessage=\"Formula 1's API is created by student team for academy Upgrade. The data and images are used without claim of ownership and belong to their respective owners.\"/>\n            </QuestionContent>\n            \n        </QuestionContainer>\n    )\n}\n\nexport default Question;\n","import React from 'react';\nimport Question from '../components/ui/Question';\n\nconst About = () => {\n    return (\n        <>\n            <Question></Question>\n        </>\n    )\n}\n\nexport default About;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from \"react-intl\";\nimport { Link, Routes, Route, HashRouter} from \"react-router-dom\";\nimport Home from \"../../pages/Home\";\nimport Documentation from \"../../pages/Documentation\";\nimport Contact from \"../../pages/Contact\";\nimport Contribution from \"../../pages/Contribution\";\nimport About from \"../../pages/About\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\n\nconst desktopStartWidth = 660;\n\n// eslint-disable-next-line no-unused-vars\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\n// eslint-disable-next-line no-unused-vars\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\n\nconst Nav = styled.nav`\n    /* margin-bottom: 40px; */\n    padding: 20px 0px;\n`;\n\nconst Navul = styled.ul`\n    list-style:none;\n    color: black;\n    display:flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    padding-inline-start: 0px;\n    ${mobile} {\n        overflow: hidden;\n        flex-direction: column;\n        width: 100%;\n        display: ${({ isOpen }) => (isOpen ? \"flex\" : \"none\")};\n        max-height: ${({ isOpen }) => (isOpen ? \"300px\" : \"0\")};\n\t}\n   \n`;\n\nconst Navli = styled.li`\n    text-align:center;\n    text-transform: capitalize;\n    ${mobile} {\n        padding: 10px;\n        border: whitesmoke;\n    }\n`;\n\nconst NavItem = styled.span`\nborder: none;\nfont-size: 13px;\nline-height: 1.5;\ntext-transform: uppercase;\nfont-weight: bolder;\ncolor: white;\nbackground-color: #e10600;\nborder-radius: 5px;\npadding: 12px;\ncursor: pointer;\nborder: 3px solid #e10600;\n&&:hover{\n    transition:.5s;\n    background-color: white;\n    color: #e10600;\n}\n${mobile} {\n    border: 0px solid #e10600;\n    border-radius: 5px;\n    background-color: transparent;\n    color: #e10600;\n    font-size: 1.25rem;\n}\n`;\n\nconst CheckBtn = styled.i`\ndisplay: none;\nmargin: 10px;\nfont-size: 40px;\ncursor: pointer;\nposition: -webkit-sticky;\n    position: sticky;\n    top: 20px;\n:hover{\n        transition: 0.2s;\n        color: red;\n    }\n${mobile} {\n    display: flex;\n    \n}\n`\nconst LogoImage = styled.img`\nwidth: 100px;\nheight: 100%;\ncursor: pointer;\n&:hover {\n    opacity: 50%;\n}\n`;\n\nconst Navigation = () => {\nconst [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <HashRouter>\n            <Nav>\n            <CheckBtn onClick={() =>\n            setIsOpen(!isOpen)\n            }><FontAwesomeIcon icon={faBars}></FontAwesomeIcon></CheckBtn>\n                <Navul isOpen={isOpen}>\n                    <Navli>\n                        <Link to=\"/\" style={{ \"text-decoration\": \"none\" }}>\n                            <LogoImage src=\"https://logodownload.org/wp-content/uploads/2016/11/formula-1-logo-7.png\" alt=\"\" />\n                        </Link>\n                    </Navli>\n                    <Navli>\n                        <Link to=\"/contact\" style={{ \"text-decoration\": \"none\" }}>\n                            <NavItem>\n                                <FormattedMessage id=\"nav.contact\" defaultMessage=\"Contact\"></FormattedMessage>\n                            </NavItem>\n                        </Link>\n                    </Navli>\n                    <Navli>\n                        <Link to=\"/collaborate\" style={{ \"text-decoration\": \"none\" }}>\n                            <NavItem>\n                                <FormattedMessage id=\"nav.collaborate\" defaultMessage=\"Collaborate\"></FormattedMessage>\n                            </NavItem>\n                        </Link>\n                    </Navli>\n                    <Navli>\n\n                        <Link to=\"/documentation\" style={{ \"text-decoration\": \"none\" }}>\n                            <NavItem>\n                                <FormattedMessage id=\"nav.documentation\" defaultMessage=\"Documentation\"></FormattedMessage>\n                            </NavItem>\n                        </Link>\n                    </Navli>\n                    <Navli>\n                        <Link to=\"/about\" style={{ \"text-decoration\": \"none\" }}>\n                            <NavItem>\n                                <FormattedMessage id=\"nav.about\" defaultMessage=\"About\"></FormattedMessage>\n                            </NavItem>\n                        </Link>\n                    </Navli>\n\n                </Navul>\n            </Nav>\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                <Route path=\"/contact\" element={<Contact />} />\n                <Route path=\"/collaborate\" element={<Contribution />} />\n                <Route path=\"/documentation\" element={<Documentation />} />\n                <Route path=\"/about\" element={<About />} />\n            </Routes>\n        </HashRouter>\n        \n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport { FormattedMessage } from \"react-intl\";\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faCreativeCommons } from '@fortawesome/free-brands-svg-icons';\n\nconst desktopStartWidth = 576;\n\n// eslint-disable-next-line no-unused-vars\nconst desktop = `@media (min-width: ${desktopStartWidth}px)`;\nconst mobile = `@media (max-width: ${desktopStartWidth}px)`;\n\n/* background-color:${props => props.backgroundColor === 'light' ? 'whitesmoke' : '#1f1f27'}; */\nconst FooterContainer = styled.div`\n    \n`;\n\nconst FooterUl = styled.ul`\n    display: flex;\n    box-sizing: border-box;\n    padding: 10px;\n    border-top: 1px solid #1f1f27;\n    ${mobile} {\n\t\tflex-wrap: wrap\n\t}\n`;\n\nconst FooterLi = styled.li`\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0 auto;\n    list-style-type: none;\n    display: flex;\n`;\n\n// color: ${props => props.color === 'light' ? '#1f1f27' : 'whitesmoke'} ;\nconst FooterA = styled.a`\n    font-weight: 600;\n    padding: 10px;\n    font-size: ${props => props.copyright === 'true' ? '1rem' : '0.75rem'} ;\n    text-decoration: none;\n    cursor: pointer;\n`;\n\nconst FooterRepo = styled.a`\n    font-weight: bold;\n    font-size: ${props => props.copyright === 'true' ? '1rem' : '0.75rem'} ;\n    display: block;\n    text-align: center;\n    margin: 0 auto;\n    text-decoration: none;` \n\nconst FooterH4 = styled.h4`\n    width: 100%;\n    text-align: center;\n    font-size: 0.75rem;\n    font-weight: bold;\n    padding: 10px 0px;\n    margin: 0;\n`;\n\n// color: ${props => props.iconColor === 'light' ? '#1f1f27' : 'whitesmoke'};\nconst FooterIcon = styled.i`\n    font-size: ${props => props.repo === 'true' ? '1rem' : '0.75rem'};\n    padding-right: 8px;\n`;\n\nconst Footer = () => {\n    return (\n        <FooterContainer backgroundColor=\"light\">\n            <FooterUl>\n                <FooterLi>\n                    <FooterA color=\"light\" target=\"_blank\" href=\"https://github.com/vtrev05\">\n                        <FooterIcon iconColor=\"light\"><FontAwesomeIcon icon={faGithub}></FontAwesomeIcon></FooterIcon>\n                        <FormattedMessage id=\"footer.social.network.victor\" defaultMessage=\"VtreV\" />\n                    </FooterA>\n                </FooterLi>\n                <FooterLi>\n                    <FooterA color=\"light\" target=\"_blank\" href=\"https://github.com/javike19\">\n                        <FooterIcon iconColor=\"light\"><FontAwesomeIcon icon={faGithub}></FontAwesomeIcon></FooterIcon>\n                        <FormattedMessage id=\"footer.social.network.javier\" defaultMessage=\"Javi\" />\n                    </FooterA>\n                </FooterLi>\n                <FooterLi>\n                    <FooterA color=\"light\" target=\"_blank\" href=\"https://github.com/juan1497\">\n                        <FooterIcon iconColor=\"light\"><FontAwesomeIcon icon={faGithub}></FontAwesomeIcon></FooterIcon>\n                        <FormattedMessage id=\"footer.social.network.juan\" defaultMessage=\"Juan\" />\n                    </FooterA>\n                </FooterLi>\n                <FooterLi>\n                    <FooterA color=\"light\" target=\"_blank\" href=\"https://github.com/tarevalosan\">\n                        <FooterIcon iconColor=\"light\"><FontAwesomeIcon icon={faGithub}></FontAwesomeIcon></FooterIcon>\n                        <FormattedMessage id=\"footer.social.network.tamara\" defaultMessage=\"Tamara\" />\n                    </FooterA>\n                </FooterLi>\n            </FooterUl>\n            <FooterRepo color=\"light\" target=\"_blank\" href=\"https://github.com/tarevalosan/frontend-api-f1\">\n                <FormattedMessage id=\"footer.social.network.repo\" defaultMessage=\"Repo\" />\n                <FooterIcon repo=\"true\" iconColor=\"light\"><FontAwesomeIcon icon={faGithub}></FontAwesomeIcon></FooterIcon>\n            </FooterRepo>\n            <FooterH4 copyright=\"true\" color=\"light\" target=\"_blank\" href=\"#\">\n                <FooterIcon iconColor=\"light\"><FontAwesomeIcon icon={faCreativeCommons}></FontAwesomeIcon></FooterIcon>\n                <FormattedMessage id=\"footer.copyright\" defaultMessage=\"Copyright\" />\n            </FooterH4>\n        </FooterContainer>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/ui/Header';\nimport Navigation from './components/ui/Navigation';\nimport Footer from './components/ui/Footer';\n\n\nfunction App() {\n  return (\n    <>\n        <Header></Header>\n        <Navigation></Navigation>\n        <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WrapperLang from '../src/context/WrapperLang';\n// import { lightTheme } from './theme/themes';\n// import GlobalStyles from '../src/theme/globalStyles';\n\nReactDOM.render(\n  // <ThemeProvider theme={lightTheme}>\n  //   <GlobalStyles />\n  //   <WrapperLang>\n  //     <App />\n  //   </WrapperLang>\n  // </ThemeProvider>,\n  <WrapperLang>\n      <App />\n  </WrapperLang>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}